name: Java QA Automation Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Deploy API image to GitHub-hosted runner
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Pull API Docker image
      run: docker pull coherentsolutions/rest-training:2.0

    - name: Run API Docker container
      run: docker run -d -p 49000:8082 coherentsolutions/rest-training:2.0

    # Step 2: Install Java
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'
    
    # Step 3: Install Maven
    - name: Setup Maven
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'
        cache: maven

    # Step 4: Check out your code from the git repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 5: Build your framework
    - name: Build with Maven
      run: mvn clean install
    
    # Step 6: Execute tests against the deployed application
    - name: Run tests
      run: mvn clean test -Dallure.results.directory=target/allure-results

    - name: Load test report history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
          ref: gh-pages
          path: gh-pages

    - name: Build test report
      uses: simple-elf/allure-report-action@v1.7
      if: always()
      with:
        gh_pages: gh-pages
        allure_history: allure-history
        allure_results: target/allure-results

    - name: Publish test report
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history
